{"uid":"7d9c178e2fa12663","name":"test_autocomplete","fullName":"tests.test_edit#test_autocomplete","historyId":"116b21cd5116ce076d64042c4703a3e3","time":{"start":1717647172743,"stop":1717647172743,"duration":0},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup","statusTrace":"chrome_browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ebdbe39731cacf4ede2aa6b02591a356\")>\n\n    @pytest.fixture\n    def logged_in_test(chrome_browser: webdriver):\n>       user = setup_test_user()\n\ntests/conftest.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:45: in setup_test_user\n    register_response = SignUp().api_call(user)\napi/post_sign_up.py:7: in api_call\n    response = self.make_request(\"POST\", \"users/signup\", json=user_data)\napi/base_api.py:33: in make_request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py:1021: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1717647171346,"stop":1717647171363,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"chrome_browser","time":{"start":1717647172743,"stop":1717647182175,"duration":9432},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"logged_in_test","time":{"start":1717647182175,"stop":1717647182212,"duration":37},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1132, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 906, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/tests/conftest.py\", line 35, in logged_in_test\n    user = setup_test_user()\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/tests/conftest.py\", line 45, in setup_test_user\n    register_response = SignUp().api_call(user)\n                        ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/api/post_sign_up.py\", line 7, in api_call\n    response = self.make_request(\"POST\", \"users/signup\", json=user_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/api/base_api.py\", line 33, in make_request\n    response.raise_for_status()\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py\", line 1021, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"testStage":{"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup","statusTrace":"chrome_browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ebdbe39731cacf4ede2aa6b02591a356\")>\n\n    @pytest.fixture\n    def logged_in_test(chrome_browser: webdriver):\n>       user = setup_test_user()\n\ntests/conftest.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:45: in setup_test_user\n    register_response = SignUp().api_call(user)\napi/post_sign_up.py:7: in api_call\n    response = self.make_request(\"POST\", \"users/signup\", json=user_data)\napi/base_api.py:33: in make_request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py:1021: HTTPError","steps":[],"attachments":[{"uid":"eb9a4c148fef7146","name":"log","source":"eb9a4c148fef7146.txt","type":"text/plain","size":1426}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"chrome_browser::0","time":{"start":1717647182270,"stop":1717647182325,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_edit"},{"name":"host","value":"fv-az714-424"},{"name":"thread","value":"3390-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_edit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":16,"unknown":0,"total":17},"items":[{"uid":"d63d24efc114adfc","reportUrl":"https://BartekSWT.github.io/python-e2e-localstack-tests/3//#testresult/d63d24efc114adfc","status":"passed","time":{"start":1717623497903,"stop":1717623498576,"duration":673}},{"uid":"3ac1aa9dcf772638","reportUrl":"https://BartekSWT.github.io/python-e2e-localstack-tests/2//#testresult/3ac1aa9dcf772638","status":"passed","time":{"start":1717618144600,"stop":1717618145269,"duration":669}},{"uid":"da5623b52c9bc07c","reportUrl":"https://BartekSWT.github.io/python-e2e-localstack-tests/1//#testresult/da5623b52c9bc07c","status":"passed","time":{"start":1717616732327,"stop":1717616733004,"duration":677}},{"uid":"4dd707d9db3e55c0","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/34//#testresult/4dd707d9db3e55c0","status":"passed","time":{"start":1717614534474,"stop":1717614535154,"duration":680}},{"uid":"2d180ca2fbd85ab2","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/33//#testresult/2d180ca2fbd85ab2","status":"passed","time":{"start":1717612373656,"stop":1717612374417,"duration":761}},{"uid":"b25edbe176882114","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/32//#testresult/b25edbe176882114","status":"passed","time":{"start":1717437346930,"stop":1717437347726,"duration":796}},{"uid":"335d285bbc7151b4","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/31//#testresult/335d285bbc7151b4","status":"passed","time":{"start":1716835398289,"stop":1716835398980,"duration":691}},{"uid":"1639287097ec8dbc","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/30//#testresult/1639287097ec8dbc","status":"passed","time":{"start":1716832087819,"stop":1716832088635,"duration":816}},{"uid":"77742dc3cc81efdb","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/29//#testresult/77742dc3cc81efdb","status":"passed","time":{"start":1716748892985,"stop":1716748893835,"duration":850}},{"uid":"ef17e0d42d1c054a","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/28//#testresult/ef17e0d42d1c054a","status":"passed","time":{"start":1716046191482,"stop":1716046192278,"duration":796}},{"uid":"b42f2fd9c6c77a4d","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/27//#testresult/b42f2fd9c6c77a4d","status":"passed","time":{"start":1715955672701,"stop":1715955673577,"duration":876}},{"uid":"a8e39fc84d737df4","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/26//#testresult/a8e39fc84d737df4","status":"passed","time":{"start":1715529064012,"stop":1715529064735,"duration":723}},{"uid":"b49c565004edae0e","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/25//#testresult/b49c565004edae0e","status":"passed","time":{"start":1715528271441,"stop":1715528272206,"duration":765}},{"uid":"d7f82726832a022","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/24//#testresult/d7f82726832a022","status":"passed","time":{"start":1715499472236,"stop":1715499472948,"duration":712}},{"uid":"40a9be7bac66e42","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/23//#testresult/40a9be7bac66e42","status":"passed","time":{"start":1715498556582,"stop":1715498557248,"duration":666}},{"uid":"e2aeb4b61d17b9db","reportUrl":"https://slawekradzyminski.github.io/python-e2e-localstack-tests/22//#testresult/e2aeb4b61d17b9db","status":"passed","time":{"start":1715498272111,"stop":1715498272772,"duration":661}}]},"tags":[]},"source":"7d9c178e2fa12663.json","parameterValues":[]}