{"uid":"160eae8aa1ecb695","name":"test_sending_mail","fullName":"tests.test_send_email#test_sending_mail","historyId":"1dfba462ea1a0a9bacffa3ae0ac99b9e","time":{"start":1717788363220,"stop":1717788369535,"duration":6315},"status":"broken","statusMessage":"requests.exceptions.MissingSchema: Invalid URL 'None//api/v2/messages': No scheme supplied. Perhaps you meant https://None//api/v2/messages?","statusTrace":"home_page = <pages.home_page.HomePage object at 0x7fa2c0d3e1e0>\nget_emails_api = <api.get_emails.GetMessages object at 0x7fa2c0d2e570>\nnew_user = RegisterRequestDto(username='sweeneykatie', password='Hf_u8fBg3@', email='ihunter@example.com', firstName='Jennifer', lastName='Zimmerman', roles=['ROLE_ADMIN', 'ROLE_CLIENT'])\n\n    def test_sending_mail(home_page: HomePage, get_emails_api: GetMessages, new_user):\n        fake = Faker()\n        message = fake.text(max_nb_chars=50)\n        subject = fake.text(max_nb_chars=10)\n        email_page = home_page.click_email_on(new_user)\n        email_page.attempt_send_email(subject, message, EmailPage).get_alert().verify_alert_success(\n            \"Email was scheduled to be send\")\n        time.sleep(5)  # gives time for mail to process through queue\n>       response = get_emails_api.api_call()\n\ntests/test_send_email.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/get_emails.py:6: in api_call\n    response = self.make_request(\"GET\", \"/api/v2/messages\")\napi/mail_api.py:32: in make_request\n    response = requests.request(method, url, **kwargs)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/sessions.py:575: in request\n    prep = self.prepare_request(req)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/sessions.py:486: in prepare_request\n    p.prepare(\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py:368: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PreparedRequest [GET]>, url = 'None//api/v2/messages'\nparams = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n>           raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\nE           requests.exceptions.MissingSchema: Invalid URL 'None//api/v2/messages': No scheme supplied. Perhaps you meant https://None//api/v2/messages?\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py:439: MissingSchema","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1717788346909,"stop":1717788346926,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"get_emails_api","time":{"start":1717788362224,"stop":1717788362224,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"new_user","time":{"start":1717788362224,"stop":1717788362523,"duration":299},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"chrome_browser","time":{"start":1717788362523,"stop":1717788362848,"duration":325},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"home_page","time":{"start":1717788362848,"stop":1717788363219,"duration":371},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"requests.exceptions.MissingSchema: Invalid URL 'None//api/v2/messages': No scheme supplied. Perhaps you meant https://None//api/v2/messages?","statusTrace":"home_page = <pages.home_page.HomePage object at 0x7fa2c0d3e1e0>\nget_emails_api = <api.get_emails.GetMessages object at 0x7fa2c0d2e570>\nnew_user = RegisterRequestDto(username='sweeneykatie', password='Hf_u8fBg3@', email='ihunter@example.com', firstName='Jennifer', lastName='Zimmerman', roles=['ROLE_ADMIN', 'ROLE_CLIENT'])\n\n    def test_sending_mail(home_page: HomePage, get_emails_api: GetMessages, new_user):\n        fake = Faker()\n        message = fake.text(max_nb_chars=50)\n        subject = fake.text(max_nb_chars=10)\n        email_page = home_page.click_email_on(new_user)\n        email_page.attempt_send_email(subject, message, EmailPage).get_alert().verify_alert_success(\n            \"Email was scheduled to be send\")\n        time.sleep(5)  # gives time for mail to process through queue\n>       response = get_emails_api.api_call()\n\ntests/test_send_email.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \napi/get_emails.py:6: in api_call\n    response = self.make_request(\"GET\", \"/api/v2/messages\")\napi/mail_api.py:32: in make_request\n    response = requests.request(method, url, **kwargs)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/api.py:59: in request\n    return session.request(method=method, url=url, **kwargs)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/sessions.py:575: in request\n    prep = self.prepare_request(req)\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/sessions.py:486: in prepare_request\n    p.prepare(\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py:368: in prepare\n    self.prepare_url(url, params)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <PreparedRequest [GET]>, url = 'None//api/v2/messages'\nparams = OrderedDict()\n\n    def prepare_url(self, url, params):\n        \"\"\"Prepares the given HTTP URL.\"\"\"\n        #: Accept objects that have string representations.\n        #: We're unable to blindly call unicode/str functions\n        #: as this will include the bytestring indicator (b'')\n        #: on python 3.x.\n        #: https://github.com/psf/requests/pull/2238\n        if isinstance(url, bytes):\n            url = url.decode(\"utf8\")\n        else:\n            url = str(url)\n    \n        # Remove leading whitespaces from url\n        url = url.lstrip()\n    \n        # Don't do any URL preparation for non-HTTP schemes like `mailto`,\n        # `data` etc to work around exceptions from `url_parse`, which\n        # handles RFC 3986 only.\n        if \":\" in url and not url.lower().startswith(\"http\"):\n            self.url = url\n            return\n    \n        # Support for unicode domain names and paths.\n        try:\n            scheme, auth, host, port, path, query, fragment = parse_url(url)\n        except LocationParseError as e:\n            raise InvalidURL(*e.args)\n    \n        if not scheme:\n>           raise MissingSchema(\n                f\"Invalid URL {url!r}: No scheme supplied. \"\n                f\"Perhaps you meant https://{url}?\"\n            )\nE           requests.exceptions.MissingSchema: Invalid URL 'None//api/v2/messages': No scheme supplied. Perhaps you meant https://None//api/v2/messages?\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py:439: MissingSchema","steps":[],"attachments":[{"uid":"e777368742ef622e","name":"log","source":"e777368742ef622e.txt","type":"text/plain","size":1686}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"chrome_browser::0","time":{"start":1717788369604,"stop":1717788369664,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_send_email"},{"name":"host","value":"fv-az1055-767"},{"name":"thread","value":"3400-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_send_email"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"160eae8aa1ecb695.json","parameterValues":[]}